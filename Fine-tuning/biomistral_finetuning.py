# -*- coding: utf-8 -*-
"""BioMistral_finetuning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hRY5hYoepTKDLaw0fqi6uYaKS9wsGmet
"""

!pip install torch transformers datasets accelerate scikit-learn pandas

"""**Load Pretrained Biomistral Model and Tokenizer**"""

from transformers import AutoTokenizer, AutoModelForCausalLM

# Load the tokenizer and model
model_name = "BioMistral/BioMistral-7B-GGUF"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

"""**Prepare the Dataset for Fine-Tuning**"""

from datasets import Dataset
import pandas as pd

# Load your preprocessed dataset
df = pd.read_csv("path_to_your_preprocessed_dataset.csv")

# Convert DataFrame to Hugging Face Dataset
dataset = Dataset.from_pandas(df)

# Tokenization function
def tokenize_function(examples):
    return tokenizer(examples['transcription'], padding='max_length', truncation=True)

# Tokenize the dataset
tokenized_datasets = dataset.map(tokenize_function, batched=True)

"""**Fine-Tuning the Model**"""

from transformers import Trainer, TrainingArguments

# Define the training arguments
training_args = TrainingArguments(
    output_dir="./results",
    per_device_train_batch_size=4,
    per_device_eval_batch_size=4,
    num_train_epochs=3,
    logging_dir='./logs',
    evaluation_strategy="steps",
    save_total_limit=1,
)

# Define the Trainer
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_datasets,
    tokenizer=tokenizer
)

# Fine-tune the model
trainer.train()

"""**Save the Fine-Tuned Model**"""

model.save_pretrained("./fine-tuned-biomistral")
tokenizer.save_pretrained("./fine-tuned-biomistral")